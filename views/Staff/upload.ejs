<style>
  #hashtag-input {
  padding: 5px;
  font-size: 13px;
  border: 1px solid #ccc;
  border-radius: 5px;
}
  .hashtag {
        display: inline-block;
        background-color: #eee;
        border-radius: 4px;
        padding: 4px 8px;
        margin-right: 8px;
    }
    .hashtag .remove {
        display: inline-block;
        margin-left: 8px;
        cursor: pointer;
    }
</style>

<!-- breadcrumb-section -->
<div class="breadcrumb-section breadcrumb-bg">
    <div class="container">
      <div class="row">
        <div class="col-lg-8 offset-lg-2 text-center">
          <div class="breadcrumb-text">
            <p>Organic Information</p>
            <h1>News Idea</h1>
          </div>
        </div>
      </div>
    </div>
  </div>
<!-- end breadcrumb section -->
<body>
    <!-- <h1>File Upload</h1>
    <form action="/upload" method="post" enctype="multipart/form-data">
      <input type="file" name="files" multiple>
      <input type="submit" value="Upload">
    </form> -->
    <div class="container" style="margin-top: 60px; margin-bottom: 60px;">
        <form action="/upload" method="post" enctype="multipart/form-data" onsubmit="return confirmAgreement()" id="form">
            <div class="form-group">
              <label for="exampleFormControlInput1" ><p class="font-weight-bold" style="font-size: 25px;">Title</p></label>
              <input type="text" name="title" class="form-control" id="exampleFormControlInput1" required>
            </div>
            <div class="form-group">
                <label for="exampleFormControlTextarea1"><p class="font-weight-bold" style="font-size: 25px;">Content</p></label>
                <textarea type="text" name="content" class="form-control" id="exampleFormControlTextarea1" rows="7" required></textarea>
            </div>
            <div id="hashtag-container">
              <input type="text" id="hashtag-input" placeholder="Enter a hashtag" name="hashtag">
              <input type="hidden" name="hashtags">
          </div>
            
            <div class="form-group">
              <label for="exampleFormControlSelect1"><p class="font-weight-bold" style="font-size: 25px;">Category</p></label>
              <select class="form-control" id="exampleFormControlSelect1" name="category" required>
                <% for( let index = 0; index < category.length; index++ ) { %>
                <option value="<%= category[index]._id %>"><%= category[index].nameCate %></option>
                <% } %>
              </select>
            </div>
            <!-- <div>
                <input type="file" name="files" accept=".doc, .docx, .pdf" multiple>
                <input type="submit" value="Upload">
            </div>               -->
            <label for="file" class="drop-container">
              <span class="drop-title">Drop files here</span>
              or
              <!-- Chỉ chấp nhận tập tin có định dạng là .doc, .docx hoặc .pdf. và cho phép chọn nhiều tập tin cùng một lúc -->
              <input type="file" name="files" accept=".doc, .docx, .pdf" multiple>
            </label>
            <div class="checkbox">
              <label>
                <!-- value="true": Đặt giá trị cho ô checkbox là "true". -->
                <input type="checkbox" name="isAnonymous" value="true"> 
                  Post ideas anonymously
              </label>
              <label>
                <input type="checkbox" id="terms" name="terms">
                  I agree to the terms and conditions
              </label>
          </div>
            <input type="submit" value="submit" style="margin-left: 500px; margin-top: 20px;">            
          </form>
    </div>
    <script>
      
      function confirmAgreement() {
        if (document.getElementById("terms").checked) {
          return confirm("Are you sure you agree to the terms and conditions?");
        } else {
          alert("Please agree to the terms and conditions.");
          return false;
        }
      }
      // Tìm phần tử HTML checkbox về việc ẩn danh
      const checkbox = document.querySelector('input[name="isAnonymous"]');
      // Tìm phần tử HTML chứa tên người đăng
      const username = document.querySelector('.username'); // thẻ HTML chứa tên người đăng
      // Thêm sự kiện lắng nghe cho checkbox, bất cứ khi nào trạng thái thay đổi, hàm này được kích hoạt
      checkbox.addEventListener('change', () => {
        // Nếu checkbox được chọn, thay đổi nội dung của phần tử HTML chứa tên người đăng thành "Unknown"
        if (checkbox.checked) {
          username.textContent = 'Unknown';
        } else {
          // Ngược lại, thay đổi nội dung của phần tử HTML chứa tên người đăng thành tên thực của người đăng
          username.textContent = 'Tên người đăng'; // thay thế bằng tên thực của người đăng
        }
      });

      const container = document.getElementById("hashtag-container");
    const input = document.getElementById("hashtag-input");
    const hiddenInput = container.querySelector("input[name='hashtags']");

const hashtags = [];

    input.addEventListener("keyup", function(event) {
  if (event.keyCode === 13) { // Enter key
    
    const hashtagValue = input.value.trim();
    
    if (hashtagValue.length > 0) {
      addHashtag(hashtagValue);
      input.value = "";
      
    } else {
      event.preventDefault(); // prevent form submission if hashtag input is empty
    }
  }
});
    input.addEventListener('keydown', function(event) {
  if (event.keyCode === 13) {
    event.preventDefault(); // prevent default behavior of "Enter" key
  }
});

function addHashtag(hashtag) {
  // Check if hashtag already exists in array
  if (hashtags.includes(hashtag)) {
    // Don't add duplicate hashtag
    return;
  }

  const hashtagElem = document.createElement("div");
  hashtagElem.className = "hashtag";
  hashtagElem.innerHTML = "#" + hashtag;

  const removeElem = document.createElement("span");
  removeElem.className = "remove";
  removeElem.innerHTML = "X";
  removeElem.addEventListener("click", function() {
      hashtagElem.remove();

      // Remove hashtag from array
      const index = hashtags.indexOf(hashtag);
      if (index !== -1) {
          hashtags.splice(index, 1);
          hiddenInput.value = JSON.stringify(hashtags);
      }
  });

  hashtagElem.appendChild(removeElem);
  container.appendChild(hashtagElem);

  // Add hashtag to array if it doesn't already exist
  if (!hashtags.includes(hashtag)) {
    hashtags.push(hashtag);
    hiddenInput.value = JSON.stringify(hashtags);
  }
}


      
    </script>   
</body>
